[
  {
    "name": "io.jsonwebtoken.Jwts",
    "allPublicMethods": true
  },
  {
    "name": "io.jsonwebtoken.impl.DefaultJwtBuilder",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "io.jsonwebtoken.impl.DefaultJwtParser",
    "allPublicConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "io.jsonwebtoken.impl.DefaultJwtParserBuilder",
    "allPublicConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "io.jsonwebtoken.impl.security.KeysBridge",
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "allPublicFields": true
  },
  {
    "name": "io.jsonwebtoken.impl.crypto.MacProvider",
    "allPublicConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "io.jsonwebtoken.impl.crypto.RsaProvider",
    "allPublicConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "io.jsonwebtoken.impl.crypto.EllipticCurveProvider",
    "allPublicConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "io.jsonwebtoken.jackson.io.JacksonSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "io.jsonwebtoken.jackson.io.JacksonDeserializer",
    "allPublicConstructors": true
  },
  {
    "name": "io.jsonwebtoken.impl.compression.DeflateCompressionAlgorithm",
    "allPublicConstructors": true
  },
  {
    "name": "io.jsonwebtoken.impl.compression.GzipCompressionAlgorithm",
    "allPublicConstructors": true
  },
  {
    "name": "io.jsonwebtoken.impl.security.StandardSecureDigestAlgorithms",
    "allPublicConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "io.jsonwebtoken.impl.security.StandardKeyOperations",
    "allPublicConstructors": true
  },
  {
    "name": "io.jsonwebtoken.impl.lang.Services",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "io.jsonwebtoken.impl.DefaultJwtBuilder$Supplier",
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.jsonwebtoken.impl.DefaultJwtParserBuilder$Supplier",
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.jsonwebtoken.impl.DefaultJwtHeaderBuilder$Supplier",
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.jsonwebtoken.impl.DefaultClaimsBuilder$Supplier",
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "kotlin.reflect.jvm.internal.impl.builtins.BuiltInsLoaderImpl",
    "allPublicConstructors": true
  },
  {
    "name": "io.confluent.kafka.serializers.KafkaAvroDeserializer",
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.confluent.kafka.serializers.KafkaAvroSerializer",
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.confluent.kafka.serializers.subject.RecordNameStrategy",
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.confluent.kafka.serializers.subject.TopicRecordNameStrategy",
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.confluent.kafka.serializers.subject.TopicNameStrategy",
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.kafka.common.serialization.ByteArrayDeserializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.apache.kafka.common.serialization.StringDeserializer",
    "allPublicConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.apache.kafka.common.serialization.StringSerializer",
    "allPublicConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "io.confluent.kafka.serializers.context.NullContextNameStrategy",
    "allPublicConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "io.confluent.kafka.serializers.context.strategy.ContextNameStrategy",
    "allPublicMethods": true
  }
]